/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rcsas;

import java.io.File;
import java.util.Scanner;

/**
 *
 * @author user
 */
public class SortRecordGUI extends javax.swing.JFrame {

    /**
     * Creates new form SortRecordGUI
     */
    public SortRecordGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        CoachNameButton = new javax.swing.JButton();
        CoachHourlyPayRateButton = new javax.swing.JButton();
        CoachOverallPerformanceButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SortOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel1.setText("Sort Record");

        CoachNameButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        CoachNameButton.setForeground(new java.awt.Color(0, 153, 0));
        CoachNameButton.setText("Coach Name");
        CoachNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoachNameButtonActionPerformed(evt);
            }
        });

        CoachHourlyPayRateButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        CoachHourlyPayRateButton.setForeground(new java.awt.Color(204, 51, 0));
        CoachHourlyPayRateButton.setText("Coach Hourly Pay Rate");
        CoachHourlyPayRateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoachHourlyPayRateButtonActionPerformed(evt);
            }
        });

        CoachOverallPerformanceButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        CoachOverallPerformanceButton.setForeground(new java.awt.Color(153, 102, 0));
        CoachOverallPerformanceButton.setText("Coach Overall Performance");
        CoachOverallPerformanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoachOverallPerformanceButtonActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        BackButton.setForeground(new java.awt.Color(0, 0, 255));
        BackButton.setText("BACK");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        SortOutput.setColumns(20);
        SortOutput.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        SortOutput.setRows(5);
        SortOutput.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        SortOutput.setEnabled(false);
        jScrollPane1.setViewportView(SortOutput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(BackButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CoachNameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CoachOverallPerformanceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CoachHourlyPayRateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(CoachNameButton)
                .addGap(18, 18, 18)
                .addComponent(CoachHourlyPayRateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CoachOverallPerformanceButton)
                .addGap(23, 23, 23)
                .addComponent(BackButton)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CoachNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoachNameButtonActionPerformed
        SortOutput.setText("");
        SortCoachName();
    }//GEN-LAST:event_CoachNameButtonActionPerformed

    private void CoachHourlyPayRateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoachHourlyPayRateButtonActionPerformed
        SortOutput.setText("");
        SortHourlyPayRate();
    }//GEN-LAST:event_CoachHourlyPayRateButtonActionPerformed

    private void CoachOverallPerformanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoachOverallPerformanceButtonActionPerformed
        SortOutput.setText("");
        SortOverallPerformance();
    }//GEN-LAST:event_CoachOverallPerformanceButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        dispose();
        AdminMainGUI adminMainGUI = new AdminMainGUI();
        adminMainGUI.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void SortCoachName() {
        File f = new File("coach_details.txt");
        try {
            Scanner buffer = new Scanner(f);
            String[] name = new String[10];
            int i = 0;
            String temp;
            
            while (buffer.hasNext()) {
                String line = buffer.nextLine();

                if (line.isEmpty()) {
                    line = buffer.nextLine();
                }

                if (line.contains("NAME")) {
                    name[i] = line.substring(6);
                    i++;
                }
            }
            
            for (i = 0; i < 10; i++) {
                for (int j = i + 1; j < 10; j++) { 
                    if (name[i].compareTo(name[j]) > 0) {
                        temp = name[i];
                        name[i] = name[j];
                        name[j] = temp;
                    }
                }
            }
            
            for (i = 0; i <= 9; i++) {
                SortOutput.append(name[i] + "\n");
            }
        } catch (Exception e) {
            System.out.println("File does not exist.");
        }
    }
    
    private void SortHourlyPayRate() {
        File f = new File("coach_details.txt");
        try {
            Scanner buffer = new Scanner(f);
            int[] rate = new int[10];
            int i = 0;
            int temp;
            
            while (buffer.hasNext()) {
                String line = buffer.nextLine();

                if (line.isEmpty()) {
                    line = buffer.nextLine();
                }

                if (line.contains("PAY RATE")) {
                    rate[i] = Integer.parseInt(line.substring(10));
                    i++;
                }
            }
            
            for (i = 0; i < 10; i++) {
                for (int j = i + 1; j < 10; j++) { 
                    if (rate[i] > rate[j]) {
                        temp = rate[i];
                        rate[i] = rate[j];
                        rate[j] = temp;
                    }
                }
            }
            
            for (i = 0; i <= 9; i++) {
                SortOutput.append(rate[i] + "\n");
            }
        } catch (Exception e) {
            System.out.println("File does not exist.");
        }
    }
    
    private void SortOverallPerformance() {
        File f = new File("coach_details.txt");
        try {
            Scanner buffer = new Scanner(f);
            int[] rating = new int[10];
            int i = 0;
            int temp;
            
            while (buffer.hasNext()) {
                String line = buffer.nextLine();

                if (line.isEmpty()) {
                    line = buffer.nextLine();
                }

                if (line.contains("RATING")) {
                    rating[i] = Integer.parseInt(line.substring(8));
                    i++;
                }
            }
            
            for (i = 0; i < 10; i++) {
                for (int j = i + 1; j < 10; j++) { 
                    if (rating[i] > rating[j]) {
                        temp = rating[i];
                        rating[i] = rating[j];
                        rating[j] = temp;
                    }
                }
            }
            
            for (i = 0; i <= 9; i++) {
                SortOutput.append(rating[i] + "\n");
            }
        } catch (Exception e) {
            System.out.println("File does not exist.");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortRecordGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortRecordGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortRecordGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortRecordGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortRecordGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CoachHourlyPayRateButton;
    private javax.swing.JButton CoachNameButton;
    private javax.swing.JButton CoachOverallPerformanceButton;
    private javax.swing.JTextArea SortOutput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
